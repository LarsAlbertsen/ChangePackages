<?xml version="1.0" encoding="UTF-8"?>
<STEP-ProductInformation ContextID="Context1" WorkspaceID="Main" UseContextLocale="false">
    <BusinessRules>
        <BusinessRule ID="CreateTestData" Scope="Global" Type="Action" RunPrivileged="false"><!-- Definition:
Action #1 (JavaScriptBusinessActionWithBinds):
<config>
  <bindings>
    <binding alias="node" type="Node" contract="CurrentObjectBindContract"/>
    <binding alias="manager" type="Manager" contract="ManagerBindContract"/>
    <binding alias="ClassificationRoot" type="Classification" contract="ClassificationBindContract">
      TestClassifications
    </binding>
    <binding alias="ClassificationObjType" type="ObjectType" contract="ObjectTypeBindContract">
      TestClassification
    </binding>
    <binding alias="TestLink" type="ClassificationProductLinkType" contract="ClassificationProductLinkTypeBindContract">
      TestLink
    </binding>
    <binding alias="TestClassificationKey" type="Attribute" contract="AttributeBindContract">
      TestClassificationKey
    </binding>
  </bindings>
  <messages/>
  <javaScript>
var attributeCount = 10;
var numberOfRevisions = 10;

var startTime = java.lang.System.currentTimeMillis();
var revBefore = node.getRevisions().size();
var count=0;
for (var r=0; r<10 && r<node.getRevisions().size()<numberOfRevisions; r++) {
		logger.info("r="+r);
		for (var i=1; i<=attributeCount; i++) {
			var attrID = "Garbage-"+i;
			var attr = manager.getAttributeHome().getAttributeByID(attrID);
			//logger.info(attr.getTitle());
			node.setSimpleValue(attr, java.util.UUID.randomUUID().toString());
		}
		count++;
		createLink(node, r);
		node.approve();
}
if (count>0) {
	var endTime = java.lang.System.currentTimeMillis();
	logger.info("LotsOfGarbage ID="+node.getID()+" revBefore="+ revBefore + " revAfter="+ node.getRevisions().size()+   " revCreated="+count+ " time="+((endTime-startTime)/1000));
}

function createLink(currentNode, count) {
	logger.info("createLink "+count);
	// Link Classification
	var keyHome = manager.getKeyHome();
	var myID = ""+node.getID();
	logger.info("["+myID+"]");
	var classificationKey = myID.substring(myID.length-2)+"-"+count;
	logger.info("["+classificationKey+"]");
	var target = keyHome.getObjectByKey("TestClassificationKey", classificationKey);
	if (target==null) {
		logger.info("CreateTarget");
		target = ClassificationRoot.createClassification("", ClassificationObjType);
		target.setSimpleValue(TestClassificationKey, classificationKey);
		target.setName(classificationKey);
	}
	logger.info("Target "+target.getID());
	// check if we are already referencing it
	var foundExisting = false;
	target.queryClassificationProductLinks().forEach(function(link) {
		logger.info("checkLink "+link);
		var product = link.getProduct();
		logger.info("0 "+currentNode);
		logger.info("1 "+currentNode.getID());
		logger.info("2 "+product.getID());
		if (product.getID().equals(currentNode.getID())) {
			logger.info("found existing");
			foundExisting = true;
		}
		return true;
	});
	if (!foundExisting) {
		target.createClassificationProductLink(node, TestLink);
	}	
}
  </javaScript>
</config> -->
            <SetupGroupLink SetupGroupID="TestBR"></SetupGroupLink>
            <Name QualifierID="Qualifier root">Create Test Data</Name>
            <OnApprove ApproveSetup="Never"></OnApprove>
            <Configuration>H4sIAAAAAAAAALVX3VPbOBB/Tv4KNQ+MmYCT9OlmgmH46h1XKAyEu4ebG0Zx5KAiy0GSc01v+N+7K8mOnTiEMncPpfFq97f72y/LM5FPuXygs5ngTD/w5CHOZMKnBxoE5nDmjp0sOjj6lgoyZ0rzTEadQdjvECbjbMLlNOrcjz7t/9I5OmwfnOSaS6b1bS7YYZuQUnBj4Uj13IkuzqLO73RO72LFZ6Y4P44NOPqTm8cTLie6g1iAdkMVTZmBMJygKiKI5LTJaDFjUecrwIaCyml4ZxQE2jncEWZYY7LznGdmCHTcjyUn92yJuZ9HO1MzbCMA+riiM/tMSCEhkCmjaGwgDGdxmivFpLkef2WxQZVTr+F9HQtOtdeV2YR5cUnoVFBdnudCuF+9rX6vqKRTprZ4TJ3Wf+XU2vGExxQLt8V3Xfk2y8xrYcRZGmrDx1kYZ4qFkyylXIY8nYnwkwIndbQLkDs7jHnE9Mq5Rg49DHArJ1c57KWf4gNmaPNOSkun25i8nUjd7kZlkzw2l1w+vYEb+kXVd9J51fU6Q+vpzbyODcz1ODdv4VAP5DNbvJNQ6XNbedBFjUn5VCyPg17pfMM6O1cqU1ewD2FU/++1dpnFVPDvdCyY9zhiQJFCdnM5Eaz3xpiXy3xzwHOqCC0SeZrl0pCIDPrDNh7IPB0zdZ3csjlHNtqf2UNtqDIjnjIQVnAX2rA0jN3GxeMrLgTXwa6DVGx+whIoJVjhqg2nzJTwwW6o+XdW6MYYTgT+QJ8E1hqeiMIcDfpkh6azof3jRJvh7OkqF7DqdnfJv+1WS2RTWMAhl0kWuGIoX5+uglharTIAHg2GhCNeVM8aSAu0VpHTizMg6XB+pWoMddz3qHxY1QMt/w7A8Mu2/i1LIfaa6GRxcRY4aBtXq9erxo4nqD/iRoCpU7Fp0czc4dCwP6jImVXcc1XLDRfh/f3FWaiohPHCn+DVZK5DPMoL/LPl6HbxMVYMuhFXRIDwe8SlybqCa4zK5raIL22ekMDaYcv2bX6QNZOTn+qchgpdZkZfJz6vpFxE3aILkEXXD13ZdIVSpQ27ZKl0nMDolDqb+6kLs7a0OrXJmBR2Lk3FuQEexUkQeN775ezs9gb9fn/X5qqd5NJetkglvT4dX2yWLbRN4no+ljakGggmr9cjVl7fiq4ST2yBfVZvwc9OaDOPSumi0soNeW4s0F9eEY19If52/xWw8eqWxihAO9T5WLvus4+Cyal53P9Y1HO/SvBV32semgOBagAT8O6zgbz8ZXEBRsHWd9feOhfExu532FGEV7hN28Z10MhqLiNrlWGt39JCV+76QVAt0B5pvAtVgFeXQiO/DcwqEF/gjRM0Kr00lcaxLHrUw/g+8s0aP7L4iUDy/mGEwohSAWQnC5i1hMEwxNAYhBtXugR6YHL+jcMdAaQRSajQDGA88HPO1GLjzQcnGpbAOY0fg2L4AgEHmwplI6vOmFXGfGAsM4cMUaAYSXlfdkIa4PrlqC6nfIPqoEG1mrYGk4+FiY+rpo6tuSIP2XMO2QuaPPg327oTm3/CfAEqzdtarYxROSteJYqZXMlC9FLMyoeajfPpC9nU75VK+tdQcXG13dfCnbp+TaoI7LfrQa/+ZQzfzr36x7P/Dv8BbfYkaacPAAA=</Configuration>
            <ValidObjectTypes AllObjectTypesValid="false">
                <ValidObjectType ID="TestItem"></ValidObjectType>
            </ValidObjectTypes>
        </BusinessRule>
    </BusinessRules>
</STEP-ProductInformation>